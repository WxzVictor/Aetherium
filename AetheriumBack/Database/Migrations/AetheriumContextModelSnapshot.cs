// <auto-generated />
using System;
using AetheriumBack.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AetheriumBack.Database.Migrations
{
    [DbContext(typeof(AetheriumContext))]
    partial class AetheriumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AetheriumBack.Models.Airport", b =>
                {
                    b.Property<string>("AirportCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AirportCode");

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AirportName");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("City");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CountryCode");

                    b.Property<int>("ElevationFeet")
                        .HasColumnType("int")
                        .HasColumnName("ElevationFeet");

                    b.Property<float>("Latitude")
                        .HasColumnType("real")
                        .HasColumnName("Latitude");

                    b.Property<float>("Longitude")
                        .HasColumnType("real")
                        .HasColumnName("Longitude");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("RegionCode");

                    b.HasKey("AirportCode");

                    b.ToTable("Airport", "Aetherium");
                });

            modelBuilder.Entity("AetheriumBack.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<string>("AirlineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AirlineName");

                    b.Property<string>("ArrivalAirportCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ArrivalAirportCode");

                    b.Property<DateTimeOffset>("ArrivalTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("ArrivalTime");

                    b.Property<string>("DepartureAirportCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DepartureAirportCode");

                    b.Property<DateTimeOffset>("DepartureTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DepartureTime");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int")
                        .HasColumnName("DurationMinutes");

                    b.Property<string>("FlightCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("FlightCode");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("Price");

                    b.HasKey("FlightId");

                    b.HasIndex("ArrivalAirportCode");

                    b.HasIndex("DepartureAirportCode");

                    b.ToTable("Flight", "Aetherium");
                });

            modelBuilder.Entity("AetheriumBack.Models.Flight", b =>
                {
                    b.HasOne("AetheriumBack.Models.Airport", "ArrivalAirport")
                        .WithMany("ArrivingFlights")
                        .HasForeignKey("ArrivalAirportCode")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AetheriumBack.Models.Airport", "DepartureAirport")
                        .WithMany("DepartingFlights")
                        .HasForeignKey("DepartureAirportCode")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");
                });

            modelBuilder.Entity("AetheriumBack.Models.Airport", b =>
                {
                    b.Navigation("ArrivingFlights");

                    b.Navigation("DepartingFlights");
                });
#pragma warning restore 612, 618
        }
    }
}
